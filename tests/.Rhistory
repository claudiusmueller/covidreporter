col = list(
HR = c("0" = "white", "1" = "black"),
HER2 = c("0" = "white", "1" = "black"),
pCR = c("0" = "white", "1" = "black"),
Arm = c("Paclitaxel" = "darksalmon",
"Paclitaxel + ABT 888 + Carboplatin" = "darkseagreen",
"Paclitaxel + AMG 386" = "darkviolet",
"Paclitaxel + AMG 386 + Trastuzumab" = "darkslategray3",
"Paclitaxel + MK-2206" = "deeppink3",
"Paclitaxel + MK-2206 + Trastuzumab" = "dodgerblue",
"Paclitaxel + Neratinib" = "gold",
"Paclitaxel + Pertuzumab + Trastuzumab" = "darkgoldenrod4",
"Paclitaxel + Trastuzumab" = "midnightblue",
"T-DM1 + Pertuzumab" = "darkorange")))
# create heatmap
ht <- Heatmap(df_hm, bottom_annotation = ha, show_row_names = TRUE,
show_column_names = FALSE,
# column_names_gp = gpar(fontsize = 3),
# row_names_gp = gpar(fontsize = 5),
# column_title = "Heatmap (removed endpoints with > 50% sample
# missing data and samples with >= 50 endpoints missing data)",
cluster_rows = row_dend,
cluster_columns = col_dend,
row_dend_reorder = TRUE,
column_dend_reorder = TRUE,
row_split = 4,
column_split = 4,
row_title = NULL,
column_title = NULL,
heatmap_legend_param=list(title="Level", at=c(-4,0,4),
labels=c('low', 'medium', 'high')))
# labels_gp = gpar(fontsize = 5),
# title_gp = gpar(fontsize = 5,
#                 fontface = "bold")))
# draw(ht, annotation_legend_list = lgd, annotation_legend_side = "bottom",
#      row_dend_side = "right")
draw(ht, merge_legends = TRUE, heatmap_legend_side = "bottom")
# reset global heatmap options
ht_opt(RESET = TRUE)
library(knitr)
opts_chunk$set(echo = FALSE)
opts_chunk$set(warning = FALSE)
opts_chunk$set(message = FALSE)
opts_chunk$set(comment = "")
opts_chunk$set(results = "asis")
knitr::opts_chunk$set(fig.path = "figure/", dev='png')
rm(list=ls())
set.seed(67)
library(tidyverse)
library(readxl)
library(janitor)
library(ggpubr)
library(kableExtra)
library(ggrepel)
source("functions.R")
datadir <- "/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/"
df_raw <- read_csv(paste0(datadir, "ISPY2_cm_edit.csv"))
df_raw <- df_raw %>%
clean_names()
df_duplicates <- df_raw %>%
group_by(gmu_id) %>%
filter(n()>1)
df_unique <- anti_join(df_raw, df_duplicates, by="gmu_id")
df_duplicates_means <- df_duplicates %>%
group_by(gmu_id) %>%
summarize_at(vars(-rppa_array, -hr, -her2, -ispy2_id, -arm, -p_cr),
funs(mean(., na.rm=TRUE)))
df_duplicates_groups <- df_duplicates %>%
distinct(gmu_id, .keep_all=TRUE) %>%
select(gmu_id, hr, her2)
df_duplicates_done <- left_join(df_duplicates_means, df_duplicates_groups,
by="gmu_id")
df_combined <- bind_rows(df_unique, df_duplicates_done)
df <- df_combined %>%
select(-rppa_array, -ispy2_id, -arm, -p_cr) %>%
gather(endpoint, value, -hr, -her2)
shap <- df %>%
group_by(endpoint, hr, her2) %>%
summarise(
statistic = shapiro.test(value)$statistic,
p_value = shapiro.test(value)$p.value,
n = n()) %>%
ungroup()
shap_out <- shap %>%
select(endpoint, p_value, hr, her2) %>%
mutate(group = case_when((hr==1 & her2==1) ~ "HR+/HER2+",
(hr==0 & her2==1) ~ "HR-/HER2+",
(hr==1 & her2==0) ~ "HR+/HER2-",
(hr==0 & her2==0) ~ "HR-/HER2-",
TRUE ~ "none")) %>%
select(group, endpoint, p_value) %>%
spread(group, p_value)
# shap_out %>%
#     kable(caption="p-values for Shapiro Wilk test (distribution of data)") %>%
#     kable_styling(bootstrap_options=c("striped"), font_size=10)
library("ComplexHeatmap")
library("dendextend")
df <- df_combined %>%
select(-rppa_array, -ispy2_id)
# eliminate endpoints where > 1/2 of samples have missing data
df_sel_endp <- df %>%
select(-hr, -her2, -arm, -p_cr, -gmu_id) %>%
summarize_each(~sum(is.na(.))) %>%
gather(endpoint, nas) %>%
filter(nas < nrow(df)/2)
df <- df %>%
select(hr, her2, gmu_id, arm, p_cr, df_sel_endp$endpoint)
# eliminate samples where >= 50 endpoints have missing data
df_sel_sample <- df %>%
select(-hr, -her2, -arm, -p_cr) %>%
column_to_rownames("gmu_id") %>%
mutate(nas = rowSums(is.na(.))) %>%
select(nas) %>%
rownames_to_column("gmu_id") %>%
filter(nas < 50)
df <- df %>%
filter(gmu_id %in% df_sel_sample$gmu_id)
# tansform data for heatmap
df_hm <- df %>%
select(-hr, -her2, -arm, -p_cr) %>%
gather(endpoint, value, -gmu_id) %>%
spread(gmu_id, value) %>%
column_to_rownames("endpoint")
# calculate row/column clustering and dendrograms
# done outside of complexheatmap to split and color heatmap by dendrogram
row_dend = as.dendrogram(hclust(dist(df_hm, method='euclidean'),
method='ward.D2'))
row_dend = color_branches(row_dend, k = 4)
trans_df_hm <- df_hm %>%
rownames_to_column() %>%
gather(gmu_id, value, -rowname) %>%
spread(rowname, value)
col_dend = as.dendrogram(hclust(dist(trans_df_hm, method='euclidean'),
method='ward.D2'))
col_dend = color_branches(col_dend, k = 4)
# global heatmap options
ht_opt(
legend_title_gp = gpar(fontsize = 8, fontface = "bold"),
legend_labels_gp = gpar(fontsize = 8),
# heatmap_column_names_gp = gpar(fontsize = 4)
heatmap_row_names_gp = gpar(fontsize = 4)
# heatmap_column_title_gp = gpar(fontsize = 10),
# heatmap_row_title_gp = gpar(fontsize = 5)
)
# annotations
df <- df %>%
mutate(hr = as.factor(hr),
her2 = as.factor(her2),
p_cr = as.factor(p_cr))
ha <- HeatmapAnnotation(HR = df$hr,
HER2 = df$her2,
pCR = df$p_cr,
Arm = df$arm,
col = list(
HR = c("0" = "white", "1" = "black"),
HER2 = c("0" = "white", "1" = "black"),
pCR = c("0" = "white", "1" = "black"),
Arm = c("Paclitaxel" = "darksalmon",
"Paclitaxel + ABT 888 + Carboplatin" = "darkseagreen",
"Paclitaxel + AMG 386" = "darkviolet",
"Paclitaxel + AMG 386 + Trastuzumab" = "darkslategray3",
"Paclitaxel + MK-2206" = "deeppink3",
"Paclitaxel + MK-2206 + Trastuzumab" = "dodgerblue",
"Paclitaxel + Neratinib" = "gold",
"Paclitaxel + Pertuzumab + Trastuzumab" = "darkgoldenrod4",
"Paclitaxel + Trastuzumab" = "midnightblue",
"T-DM1 + Pertuzumab" = "darkorange")))
# create heatmap
ht <- Heatmap(df_hm, bottom_annotation = ha, show_row_names = TRUE,
show_column_names = FALSE,
# column_names_gp = gpar(fontsize = 3),
# row_names_gp = gpar(fontsize = 5),
# column_title = "Heatmap (removed endpoints with > 50% sample
# missing data and samples with >= 50 endpoints missing data)",
cluster_rows = row_dend,
cluster_columns = col_dend,
row_dend_reorder = TRUE,
column_dend_reorder = TRUE,
row_split = 4,
column_split = 4,
row_title = NULL,
column_title = NULL,
heatmap_legend_param=list(title="Level", at=c(-4,0,4),
labels=c('low', 'medium', 'high')))
# labels_gp = gpar(fontsize = 5),
# title_gp = gpar(fontsize = 5,
#                 fontface = "bold")))
# draw(ht, annotation_legend_list = lgd, annotation_legend_side = "bottom",
#      row_dend_side = "right")
draw(ht, merge_legends = TRUE, heatmap_legend_side = "bottom")
# reset global heatmap options
ht_opt(RESET = TRUE)
df <- df_combined %>%
select(-gmu_id, -rppa_array, -ispy2_id, -arm, -p_cr) %>%
gather(endpoint, value, -hr, -her2) %>%
mutate(grouping_1 = ifelse((hr==0 & her2==0), "HR-/HER2-", "Other"),
grouping_2 = ifelse((hr==1 & her2==0), "HR+/HER2-", "Other"),
grouping_3 = ifelse((hr==0 & her2==1), "HR-/HER2+", "Other"),
grouping_4 = ifelse((hr==1 & her2==1), "HR+/HER2+", "Other"),
grouping_5 = ifelse(her2==1, "HER2+", "HER2-"),
grouping_6 = ifelse(hr==1, "HR+", "HR-"))
pw_comp_1 <- compare_means(value ~ grouping_1, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_2 <- compare_means(value ~ grouping_2, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_3 <- compare_means(value ~ grouping_3, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_4 <- compare_means(value ~ grouping_4, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_5 <- compare_means(value ~ grouping_5, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_6 <- compare_means(value ~ grouping_6, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
vp_1 <- volcano_plot(df, pw_comp_1, "HR-/HER2- vs. Others", "grouping_1")
vp_1
res_1 <- meancomp_output(df, pw_comp_1, "HR-/HER2- vs. Others", "grouping_1")
res_1$p
print(res_1$html_table)
vp_2 <- volcano_plot(df, pw_comp_2, "HR+/HER2- vs. Others", "grouping_2")
vp_2
res_2 <- meancomp_output(df, pw_comp_2, "HR+/HER2- vs. Others", "grouping_2")
res_2$p
View(df)
t <- df %>%
filter(endpoint == "a_raf_s299") %>%
group_by(grouping_6) %>%
summarise(mean = mean(value, na.rm = TRUE))
t
u <- df_raw %>%
group_by(hr) %>%
summarise(mean = mean(a_raf_s299, na.rm = TRUE))
u
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_1 <- meancomp_output(df, pw_comp_1, "HR-/HER2- vs. Others", "grouping_1")
res_1$p
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
df <- df_combined %>%
select(-gmu_id, -rppa_array, -ispy2_id, -arm, -p_cr) %>%
gather(endpoint, value, -hr, -her2) %>%
mutate(grouping_1 = ifelse((hr==0 & her2==0), "HR-/HER2-", "Other"),
grouping_2 = ifelse((hr==1 & her2==0), "HR+/HER2-", "Other"),
grouping_3 = ifelse((hr==0 & her2==1), "HR-/HER2+", "Other"),
grouping_4 = ifelse((hr==1 & her2==1), "HR+/HER2+", "Other"),
grouping_5 = ifelse(her2==1, "HER2+", "HER2-"),
grouping_6 = ifelse(hr==1, "HR+", "HR-"),
grouping_7 = case_when((her2==0 & hr==0) ~ "HER2-/HR-",
(her2==0 & hr==1) ~ "HER2-/HR+",
TRUE ~ "Other"),
grouping_8 = case_when((her2==0 & hr==0) ~ "HER2-/HR-",
(her2==1 & hr==0) ~ "HER2-/HR+",
TRUE ~ "Other"),
grouping_9 = case_when((her2==1 & hr==1) ~ "HER2+/HR+",
(her2==1 & hr==0) ~ "HER2+/HR-",
TRUE ~ "Other"),
grouping_10 = case_when((her2==1 & hr==1) ~ "HER2+/HR+",
(her2==0 & hr==1) ~ "HER2-/HR+",
TRUE ~ "Other"))
pw_comp_1 <- compare_means(value ~ grouping_1, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_2 <- compare_means(value ~ grouping_2, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_3 <- compare_means(value ~ grouping_3, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_4 <- compare_means(value ~ grouping_4, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_5 <- compare_means(value ~ grouping_5, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
pw_comp_6 <- compare_means(value ~ grouping_6, df, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_7 <- df %>%
filter(grouping_7 != "Other")
pw_comp_7 <- compare_means(value ~ grouping_7, df_comp_7, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_8 <- df %>%
filter(grouping_8 != "Other")
pw_comp_8 <- compare_means(value ~ grouping_8, df_comp_8, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_9 <- df %>%
filter(grouping_9 != "Other")
pw_comp_9 <- compare_means(value ~ grouping_9, df_comp_9, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_10 <- df %>%
filter(grouping_10 != "Other")
pw_comp_10 <- compare_means(value ~ grouping_10, df_comp_10, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
unique(df$hr)
unique(df$her2)
df <- df_combined %>%
select(-gmu_id, -rppa_array, -ispy2_id, -arm, -p_cr) %>%
gather(endpoint, value, -hr, -her2) %>%
mutate(grouping_1 = case_when((hr==0 & her2==0) ~ "HR-/HER2-",
(is.na(hr) | is.na(her2)) ~ "remove",
TRUE ~ "Other"),
grouping_2 = case_when((hr==1 & her2==0) ~ "HR+/HER2-",
(is.na(hr) | is.na(her2)) ~ "remove",
TRUE ~ "Other"),
grouping_3 = case_when((hr==0 & her2==1) ~ "HR-/HER2+",
(is.na(hr) | is.na(her2)) ~ "remove",
TRUE ~ "Other"),
grouping_4 = case_when((hr==1 & her2==1) ~ "HR+/HER2+",
(is.na(hr) | is.na(her2)) ~ "remove",
TRUE ~ "Other"),
grouping_5 = case_when(her2==1 ~ "HER2+",
her2==0 ~ "HER2-",
TRUE ~ "remove"),
grouping_6 = case_when(hr==1 ~ "HR+",
hr==0 ~ "HR-",
TRUE ~ "remove"),
grouping_7 = case_when((her2==0 & hr==0) ~ "HER2-/HR-",
(her2==0 & hr==1) ~ "HER2-/HR+",
TRUE ~ "remove"),
grouping_8 = case_when((her2==0 & hr==0) ~ "HER2-/HR-",
(her2==1 & hr==0) ~ "HER2-/HR+",
TRUE ~ "remove"),
grouping_9 = case_when((her2==1 & hr==1) ~ "HER2+/HR+",
(her2==1 & hr==0) ~ "HER2+/HR-",
TRUE ~ "remove"),
grouping_10 = case_when((her2==1 & hr==1) ~ "HER2+/HR+",
(her2==0 & hr==1) ~ "HER2-/HR+",
TRUE ~ "remove"))
df_comp_1 <- df %>%
filter(grouping_1 != "remove")
pw_comp_1 <- compare_means(value ~ grouping_1, df_comp_1, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_2 <- df %>%
filter(grouping_2 != "remove")
pw_comp_2 <- compare_means(value ~ grouping_2, df_comp_2, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_3 <- df %>%
filter(grouping_3 != "remove")
pw_comp_3 <- compare_means(value ~ grouping_3, df_comp_3, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_4 <- df %>%
filter(grouping_4 != "remove")
pw_comp_4 <- compare_means(value ~ grouping_4, df_comp_4, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_5 <- df %>%
filter(grouping_5 != "remove")
pw_comp_5 <- compare_means(value ~ grouping_5, df_comp_5, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_6 <- df %>%
filter(grouping_6 != "remove")
pw_comp_6 <- compare_means(value ~ grouping_6, df_comp_6, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_7 <- df %>%
filter(grouping_7 != "remove")
pw_comp_7 <- compare_means(value ~ grouping_7, df_comp_7, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_8 <- df %>%
filter(grouping_8 != "remove")
pw_comp_8 <- compare_means(value ~ grouping_8, df_comp_8, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_9 <- df %>%
filter(grouping_9 != "remove")
pw_comp_9 <- compare_means(value ~ grouping_9, df_comp_9, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
df_comp_10 <- df %>%
filter(grouping_10 != "remove")
pw_comp_10 <- compare_means(value ~ grouping_10, df_comp_10, group.by="endpoint",
p.adjust.method="holm", method="wilcox.test")
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res7$count_table)
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res_7$count_table)
View(pw_comp_1)
View(df_comp_1)
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res_7$count_table)
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res_7$count_table)
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res_7$count_table)
res_7$p
t <- df_comp_7 %>%
select(grouping_7, "androgen_rec_s650") %>%
mutate(l10 = log10(value))
t <- df_comp_7 %>%
select(grouping_7, endpoint) %>%
filter(endpoint == "androgen_rec_s650") %>%
mutate(l10 = log10(value))
t <- df_comp_7 %>%
select(grouping_7, endpoint, value) %>%
filter(endpoint == "androgen_rec_s650") %>%
mutate(l10 = log10(value))
View(t)
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = quantile(value, na.rm = TRUE),
iqr = IQR(value, na.rm = TRUE),
low_cut = quant[1] - 1.5 * iqr,
high_cut = quant[2] + 1.5 * iqr)
View(df_outliers)
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = list(quantile(value, na.rm = TRUE)),
iqr = IQR(value, na.rm = TRUE),
low_cut = quant[1] - 1.5 * iqr,
high_cut = quant[2] + 1.5 * iqr)
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = list(quantile(value, na.rm = TRUE)),
iqr = IQR(value, na.rm = TRUE))
View(df_outliers)
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = list(quantile(value, na.rm = TRUE)),
iqr = IQR(value, na.rm = TRUE),
l25 = quant[1])
View(df_outliers)
df_outliers$quant[1]
df_outliers$quant[1][1]
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = quantile(value, na.rm = TRUE)[1]),
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = quantile(value, na.rm = TRUE)[1],
iqr = IQR(value, na.rm = TRUE))
View(df_outliers)
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = quantile(value, na.rm = TRUE)[`25%`],
iqr = IQR(value, na.rm = TRUE))
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = quantile(value, na.rm = TRUE),
q25 = quantile(value, na.rm = TRUE)[2],
iqr = IQR(value, na.rm = TRUE))
View(df_outliers)
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = list(quantile(value, na.rm = TRUE)),
q25 = quantile(value, na.rm = TRUE)[2],
iqr = IQR(value, na.rm = TRUE))
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
summarise(quant = list(quantile(value, na.rm = TRUE)),
q25 = quantile(value, na.rm = TRUE)[2],
q75 = quantile(value, na.rm = TRUE)[4],
iqr = IQR(value, na.rm = TRUE),
low_cut = q25 - 1.5 * iqr,
high_cut = q75 + 1.5 * iqr,
outlier = ifelse((value > low_cut & value < high_cut), "no", "yes"))
df_outliers <- df_comp_7 %>%
group_by(grouping_7, endpoint) %>%
mutate(quant = list(quantile(value, na.rm = TRUE)),
q25 = quantile(value, na.rm = TRUE)[2],
q75 = quantile(value, na.rm = TRUE)[4],
iqr = IQR(value, na.rm = TRUE),
low_cut = q25 - 1.5 * iqr,
high_cut = q75 + 1.5 * iqr,
outlier = ifelse((value > low_cut & value < high_cut), "no", "yes"))
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_7 <- meancomp_output(df_comp_7, pw_comp_7, "HER2-/HR- vs. HER2-/HR+",
"grouping_7")
print(res_7$count_table)
res_7$p
res_1 <- meancomp_output(df_comp_1, pw_comp_1, "HR-/HER2- vs. Others", "grouping_1")
res_1$p
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
res_1 <- meancomp_output(df_comp_1, pw_comp_1, "HR-/HER2- vs. Others", "grouping_1")
res_1$p
source('/data/work/Publicity/Analysis_for_Others/Chip/ISPY_MeanComp_07_20_20/functions.R')
source('/data/work/Projects - Active/CAP/Covid/GMU_Virus/data_pipeline/testdir_2/export_data.R', echo=TRUE)
shiny::runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
View(compute_run_results)
debugSource('/data/programming/Work/Covid_CAP_Lab/Covid_Report/data_functions.R', echo=TRUE)
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
force(run)
head(run)
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
options(shiny.error = browser)
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
View(run_results)
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
View(run)
View(run_head)
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
runApp('/data/programming/Work/Covid_CAP_Lab/Covid_Report')
testthat::tests("test_app")
setwd("/data/programming/Work/Covid_CAP_Lab/Covid_Report")
testthat::tests("test_app")
setwd("/data/programming/Work/Covid_CAP_Lab/Covid_Report/tests")
testthat::tests("test_app")
testthat::("test_app")
testthat::"test_app"
testthat::tests("test_app")
